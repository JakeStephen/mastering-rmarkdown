[
["index.html", "Mastering R Markdown Chapter 1 About the book 1.1 Ideas to be written up", " Mastering R Markdown Michael Harper 2018-04-30 Chapter 1 About the book This book aims to bring together lots of useful tips for R Markdown. There are already several fantastic books out there which you may have already read: Dynamic documents and knitr R Markdown: The Definitive guide Authoring books with bookdown Blogdown 1.1 Ideas to be written up Use (ref:tag) to store page formatting options which might need to be reused. For example a page break Managing big projects: source is particularly useful for loading external scripts so that the R Markdown project isnâ€™t too bloated with code. Using subfigures within the R Markdown environments: https://stackoverflow.com/questions/12546365/subfigures-or-subcaptions-with-knitr/49086985#49086985 Caching, and ways it can be tailored to suit analysis. This cache invalidation is a great example: https://stackoverflow.com/questions/18376008/invalidate-a-chunks-cache-when-uncached-chunk-changes Knitr hooks: these are explained within your previous book, but i I think a few more practical examples could be very useful for readers to see the power of it. -Designing custom behavior which can respond to change in outputs using is_latex_output etc. For example, you may want to have interactive tables using DT:datatable in the HTML output but print static versions in the PDF. Creating stylized tables using kableExtra: lots of fun things can be done with this package Using short author citations: https://stackoverflow.com/questions/48303890/using-short-author-citations-in-bookdown-rmarkdown?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa "],
["intro.html", "Chapter 2 Introduction", " Chapter 2 Introduction Some text You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 2. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 2.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 2.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 2.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 2.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2018) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],
["references.html", "Chapter 3 References", " Chapter 3 References "],
["latex.html", "Chapter 4 LaTeX 4.1 Inserting Commands 4.2 LaTeX preamble 4.3 Subfigures 4.4 Changing citation Engine 4.5 Altering Citation Style", " Chapter 4 LaTeX For many authors, the main of long reports or books, the primary output will bee LaTeX R Markdown is able to use 4.1 Inserting Commands 4.2 LaTeX preamble 4.3 Subfigures 4.4 Changing citation Engine 4.5 Altering Citation Style "]
]
